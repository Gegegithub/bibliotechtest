# Generated by Django 5.2.4 on 2025-08-28 11:49

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('bibliotheque', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_internal', models.BooleanField(default=False)),
                ('is_external', models.BooleanField(default=False)),
                ('is_company_member', models.BooleanField(default=False)),
                ('is_bibliothecaire', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='Les groupes auxquels cet utilisateur appartient.', related_name='usager_set', related_query_name='usager', to='auth.group', verbose_name='groupes')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Permissions spécifiques pour cet utilisateur.', related_name='usager_set', related_query_name='usager', to='auth.permission', verbose_name='permissions utilisateur')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('lu', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProfilBibliotheque',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_utilisateur', models.CharField(choices=[('etudiant', 'Étudiant'), ('professionnel', 'Professionnel'), ('membre_entreprise', "Membre d'entreprise")], default='professionnel', max_length=20)),
                ('profession', models.CharField(blank=True, max_length=100, null=True)),
                ('institution', models.CharField(blank=True, max_length=100, null=True)),
                ('secteur_activite', models.CharField(blank=True, max_length=100, null=True)),
                ('adresse', models.TextField(blank=True, null=True)),
                ('telephone', models.CharField(blank=True, max_length=20, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='photos_usagers/')),
                ('favoris', models.ManyToManyField(blank=True, related_name='favoris_utilisateurs', to='bibliotheque.livre')),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RendezVous',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statut', models.CharField(choices=[('en_attente', 'En attente'), ('confirme', 'Confirmé'), ('annule', 'Annulé'), ('termine', 'Terminé')], default='en_attente', max_length=20)),
                ('nom', models.CharField(max_length=100)),
                ('prenom', models.CharField(max_length=100)),
                ('telephone', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('type_utilisateur', models.CharField(choices=[('etudiant_chercheur', 'Étudiant Chercheur'), ('professeur_chercheur', 'Professeur Chercheur'), ('academique', 'Académique'), ('professionnel', 'Professionnel'), ('porteur_projet', 'Porteur de projet'), ('autre', 'Autre')], max_length=50)),
                ('categorie_ouvrage', models.CharField(blank=True, max_length=200, null=True)),
                ('titre_ouvrage', models.CharField(blank=True, max_length=200, null=True)),
                ('auteur_ouvrage', models.CharField(blank=True, max_length=200, null=True)),
                ('numero_inventaire', models.CharField(blank=True, max_length=100, null=True)),
                ('ancien_code', models.CharField(blank=True, max_length=100, null=True)),
                ('raison', models.TextField()),
                ('date_souhaitee', models.DateField()),
                ('message', models.TextField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('heure_entree', models.TimeField(blank=True, null=True)),
                ('heure_sortie', models.TimeField(blank=True, null=True)),
                ('livre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rendezvous', to='bibliotheque.livre')),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
